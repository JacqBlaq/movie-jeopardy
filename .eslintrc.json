{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": true,
		"ecmaVersion": "latest",
		"sourceType": "module"
	},
	"plugins": [
		"jsdoc",
		"@typescript-eslint"
		//"prettier"
	],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		//"plugin:@typescript-eslint/strict",
		//"prettier/@typescript-eslint",
		//"plugin:jsdoc/recommended-typescript",
		"prettier"
		//"plugin:prettier/recommended"
	],
	"settings": {
    "jsdoc": {
      "mode": "typescript"
    }
  },
	"rules": {
		// JsDoc Typescript rules
		"jsdoc/check-param-names": 1,
		"jsdoc/check-property-names": 1,
		"jsdoc/no-types": 1,
		"jsdoc/check-syntax": 1,
		"jsdoc/check-tag-names": 1,
		"jsdoc/empty-tags": 1,
		"jsdoc/no-blank-blocks": 1,
		// "jsdoc/require-description": ["warn", {
		// 	"checkGetters": false,
		// 	"checkSetters": false
		// }],
		"jsdoc/require-description-complete-sentence": 1,
		"jsdoc/require-hyphen-before-param-description": 1,
		"jsdoc/require-jsdoc": ["warn", {
			"checkConstructors": false,
			"checkGetters": "no-setter",
			"enableFixer": false,
			"require": {
				"MethodDefinition": true
			},
			"contexts": [
				"MethodDefinition:not([key.name=\"ngOnInit\"]:not([key.name=\"ngOnChanges\"]):not([key.name=\"ngOnDestroy\"])"
			]
		}],
		"jsdoc/require-param": ["warn", {
			"enableFixer": false,
			"enableRootFixer": false,
			"checkRestProperty": false
		}],
		"jsdoc/require-param-description": 1,
		"jsdoc/require-returns": 1,
		"jsdoc/require-returns-description": 1,
		"jsdoc/sort-tags": 1,
		"jsdoc/text-escaping": ["warn", {
			"escapeHTML": true,
			"escapeMarkdown": true
		}],
		"jsdoc/valid-types": 1,
		"jsdoc/check-examples": 0,

		// Typescript rules
		"@typescript-eslint/no-unused-vars": "warn",
		"@typescript-eslint/consistent-type-definitions": ["off"],
		"@typescript-eslint/no-inferrable-types": [
			"warn",
			{
				"ignoreProperties": true
			}
		],
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-unsafe-assignment": "off",
		"@typescript-eslint/no-unsafe-return": "off",
		"@typescript-eslint/no-unsafe-member-access": "warn",
		"@typescript-eslint/lines-around-comment": [
			"warn",
			{
				"beforeBlockComment": false,
				"beforeLineComment": false
			}
		],
		"@typescript-eslint/no-extra-parens": "warn",
		"@typescript-eslint/no-unused-expressions": "warn",
		"@typescript-eslint/ban-types": "warn",
		"@typescript-eslint/class-literal-property-style": "warn",
		"@typescript-eslint/consistent-generic-constructors": "warn",
		"@typescript-eslint/explicit-function-return-type": "warn",
		"@typescript-eslint/restrict-template-expressions": "off",
		"@typescript-eslint/naming-convention": [
			"warn",
			{
				"selector": ["classProperty"],
				"format": ["strictCamelCase"],
				"modifiers": ["public"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": ["classProperty"],
				"format": ["camelCase"],
				"modifiers": ["private"],
				"leadingUnderscore": "require",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": ["classProperty"],
				"format": ["UPPER_CASE"],
				"modifiers": ["private", "readonly"],
				"leadingUnderscore": "require",
				"trailingUnderscore": "forbid"
			},
			// {
			// 	"selector": ["classProperty"],
			// 	"format": ["UPPER_CASE"],
			// 	"modifiers": ["static"],
			// 	"leadingUnderscore": "forbid",
			// 	"trailingUnderscore": "forbid"
			// },
			{
				"selector": ["interface"],
				"format": ["PascalCase"],
				"prefix": ["I"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": ["parameter", "parameterProperty"],
				"format": ["camelCase"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid",
				"custom": {
					"regex": "^.{2,}$",
					"match": true
				}
			}
		],
		"@typescript-eslint/prefer-readonly": "warn",
		"@typescript-eslint/type-annotation-spacing": "warn",
		"@typescript-eslint/no-duplicate-imports": "warn",
		"@typescript-eslint/no-extra-semi": "warn",
		"@typescript-eslint/no-extraneous-class": "off",

		// Base rules for @typescript-eslint
		"lines-around-comment": "off",
		"no-extra-parens": "off",
		"no-throw-literal": "off",
		"no-unused-expressions": "off",
		"no-duplicate-imports": "off",
		"no-extra-semi": "off",

		// Possible Errors (overrides from recommended set)
		"no-unexpected-multiline": "warn",
		"valid-jsdoc": "off",
		"require-jsdoc": "off",
		// All JSDoc comments must be valid
		// "valid-jsdoc": [
		// 	"warn",
		// 	{
		// 		"requireReturn": false,
		// 		"requireReturnType": true,
		// 		"requireReturnDescription": true,
		// 		"requireParamDescription": true,
		// 		"requireParamType": true,
		// 		"prefer": {
		// 			"return": "returns"
		// 		}
		// 	}
		// ],
		//"require-jsdoc": "off",
		// "require-jsdoc": [
		// 	"warn",
		// 	{
		// 		"require": {
		// 			"FunctionDeclaration": true,
		// 			"MethodDefinition": true,
		// 			"ClassDeclaration": false
		// 		}
		// 	}
		// ],
		"max-params": ["warn", 5],
		"max-len": ["warn", 145],
		"max-lines": [
			"warn",
			{
				"max": 300,
				"skipComments": true
			}
		],
		"no-trailing-spaces": "warn"
		// "no-underscore-dangle": "warn",
		// "no-unneeded-ternary": "warn",
		// "object-curly-spacing": [ "warn", "always" ],
		// "one-var": "off",
		// "operator-assignment": [ "warn", "never" ],
		// "operator-linebreak": [ "warn", "after" ],
		// "padded-blocks": [ "warn", "never" ],
		// "quote-props": [ "warn", "consistent-as-needed" ],
		// "quotes": [ "warn", "single" ],
		// "semi-spacing": [ "warn", { "before": false, "after": true }],
		// "semi": [ "error", "always" ],
		// "sort-vars": "off",
		// "keyword-spacing": [ "warn", {
		//   "before": true,
		//   "after": true
		// }],
		// "space-before-blocks": [ "warn", "always" ],
		// "space-before-function-paren": [ "warn", "never" ],
		// "space-in-parens": [ "warn", "never" ],
		// "space-infix-ops": [ "warn", { "int32Hint": true } ],
		// "space-unary-ops": "error",
		// "spaced-comment": [ "warn", "always" ],
		// "wrap-regex": "warn"
	},
	"env": {
		"browser": true,
		"es2021": true
	}
}
